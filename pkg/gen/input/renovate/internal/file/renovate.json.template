{{- $interval := .Interval -}}
{{- $language := .Language -}}
{{- $reviewer := .Reviewer -}}
{
  "extends": [
    "config:base"
    {{- if $reviewer }},
    ":reviewer({{ $reviewer | printf "team:%s" }})"
    {{- end }}
  ],
  {{- if eq $language "go" }}
  "packageRules": [
    {
      "matchPackagePatterns": [".*giantswarm.*"],
      "groupName": "giantswarm modules"
    },
    {
      "matchPackagePatterns": ["^k8s.io", "^sigs.k8s.io"],
      "groupName": "k8s modules"
    },
    {
      "excludePackagePatterns": [".*giantswarm.*" ,"^k8s.io", "^sigs.k8s.io"],
      "groupName": "etc modules"
    },
    {
      "matchPackagePatterns": ["^k8s.io"],
      "allowedVersions": "< 0.21.0"
    },
    {
      "matchPackageNames": ["sigs.k8s.io/controller-runtime"],
      "allowedVersions": "< 0.7.0"
    }
  ],
  "postUpdateOptions": ["gomodTidy", "gomodUpdateImportPaths"],
  {{- end }}
  {{- if eq $language "python" }}
  "assigneesFromCodeOwners": true,
  "packageRules": [
    {
      "matchUpdateTypes": ["patch", "pin", "digest"],
      "automerge": true
    }
  ],
  {{- end }}
  "dependencyDashboard": true,
  "ignorePaths": [
    ".github/workflows/zz_generated.*",
    ".github/workflows/codeql-analysis.yml"
  ],
  "ignoreDeps": [
    "architect",
    "zricethezav/gitleaks-action"
  ],
  "schedule": [ {{ $interval | printf "%q" }} ]
}
